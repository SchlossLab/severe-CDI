make.file(inputdir=data/raw, type=gz, prefix=cdi)
make.contigs(file=cdi.files, inputdir=data/raw/, outputdir=data/mothur/, processors=10)
summary.seqs(fasta=cdi.trim.contigs.fasta, processors=10)
screen.seqs(fasta=current, group=current, maxambig=0, maxlength=275, maxhomop=8, processors=10)
unique.seqs(fasta=current)
count.seqs(name=current, group=current)
summary.seqs(count=cdi.trim.contigs.good.count_table, processors=10)
align.seqs(fasta=current, reference=data/references/silva.v4.align, processors=10)
screen.seqs(fasta=current, count=current, start=1968, end=11550, processors=10)
summary.seqs(fasta=current, count=current, processors=10)
filter.seqs(fasta=current, vertical=T, trump=., processors=10)
unique.seqs(fasta=current, count=current)
pre.cluster(fasta=current, count=current, diffs=2, processors=10)
chimera.vsearch(fasta=current, count=current, dereplicate=T, processors=10)
remove.seqs(fasta=current, accnos=current)
summary.seqs(fasta=current, count=current, processors=10)
classify.seqs(fasta=current, count=current, reference=data/references/trainset16_022016.pds.fasta, taxonomy=data/references/trainset16_022016.pds.tax, cutoff=80)
remove.lineage(fasta=current, count=current, taxonomy=current, taxon=Chloroplast-Mitochondria-unknown-Archaea-Eukaryota)
count.seqs(name=current, group=current)

set.dir(input=data/mothur, output=data/mothur, seed=19760620)
set.current(processors=10)
remove.groups(count=cdi.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.pick.count_table, fasta=cdi.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta, taxonomy=cdi.trim.contigs.good.unique.good.filter.unique.precluster.pick.pds.wang.pick.taxonomy, groups=mock5-mock6-mock7)
cluster.split(fasta=current, count=current, taxonomy=current, cutoff=0.03, taxlevel=4, processors=10)
count.groups(count=current)
make.shared(list=current, count=current, label=0.03)
classify.otu(list=current, count=current, taxonomy=current, label=0.03)
count.groups(shared=cdi.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.opti_mcc.shared)
